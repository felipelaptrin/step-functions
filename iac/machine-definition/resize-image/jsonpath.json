{
  "QueryLanguage": "JSONPath",
  "Comment": "A description of my state machine",
  "StartAt": "Map",
  "States": {
    "Map": {
      "Type": "Map",
      "ItemProcessor": {
        "ProcessorConfig": {
          "Mode": "INLINE"
        },
        "StartAt": "Resize Profile Picture",
        "States": {
          "Resize Profile Picture": {
            "Type": "Parallel",
            "Branches": [
              {
                "StartAt": "Resize Profile Picture to Small",
                "States": {
                  "Resize Profile Picture to Small": {
                    "Type": "Task",
                    "Resource": "arn:aws:states:::lambda:invoke",
                    "Parameters": {
                      "FunctionName": "${LAMBDA_NAME}:$LATEST",
                      "Payload": {
                        "size": 128,
                        "body.$": "$.body.Records[0]"
                      }
                    },
                    "Retry": [
                      {
                        "ErrorEquals": [
                          "Lambda.ServiceException",
                          "Lambda.AWSLambdaException",
                          "Lambda.SdkClientException",
                          "Lambda.TooManyRequestsException"
                        ],
                        "IntervalSeconds": 1,
                        "MaxAttempts": 3,
                        "BackoffRate": 2,
                        "JitterStrategy": "FULL"
                      }
                    ],
                    "Next": "Set Small Profile picture URI",
                    "ResultPath": "$.resizeSmall"
                  },
                  "Set Small Profile picture URI": {
                    "Type": "Task",
                    "Resource": "arn:aws:states:::dynamodb:updateItem",
                    "Parameters": {
                      "TableName": "${DYNAMODB_TABLE_NAME}",
                      "Key": {
                        "userId": {
                          "S.$": "$.resizeSmall.Payload.data.userId"
                        }
                      },
                      "UpdateExpression": "SET smallPicture = :value",
                      "ExpressionAttributeValues": {
                        ":value": {
                          "S.$": "$.resizeSmall.Payload.data.resizedKey"
                        }
                      }
                    },
                    "End": true,
                    "ResultPath": null
                  }
                }
              },
              {
                "StartAt": "Resize Profile Picture to Big",
                "States": {
                  "Resize Profile Picture to Big": {
                    "Type": "Task",
                    "Resource": "arn:aws:states:::lambda:invoke",
                    "Parameters": {
                      "FunctionName": "${LAMBDA_NAME}:$LATEST",
                      "Payload": {
                        "size": 512,
                        "body.$": "$.body.Records[0]"
                      }
                    },
                    "Retry": [
                      {
                        "ErrorEquals": [
                          "Lambda.ServiceException",
                          "Lambda.AWSLambdaException",
                          "Lambda.SdkClientException",
                          "Lambda.TooManyRequestsException"
                        ],
                        "IntervalSeconds": 1,
                        "MaxAttempts": 3,
                        "BackoffRate": 2,
                        "JitterStrategy": "FULL"
                      }
                    ],
                    "Next": "Set Big Profile picture URI",
                    "ResultPath": "$.resizeBig"
                  },
                  "Set Big Profile picture URI": {
                    "Type": "Task",
                    "Resource": "arn:aws:states:::dynamodb:updateItem",
                    "Parameters": {
                      "TableName": "${DYNAMODB_TABLE_NAME}",
                      "Key": {
                        "userId": {
                          "S.$": "$.resizeBig.Payload.data.userId"
                        }
                      },
                      "UpdateExpression": "SET bigPicture = :value",
                      "ExpressionAttributeValues": {
                        ":value": {
                          "S.$": "$.resizeBig.Payload.data.resizedKey"
                        }
                      }
                    },
                    "End": true,
                    "ResultPath": null
                  }
                }
              }
            ],
            "Next": "Delete Uploaded Profile Picture",
            "ResultPath": "$.output",
            "Parameters": {
              "body.$": "States.StringToJson($.body)"
            }
          },
          "Delete Uploaded Profile Picture": {
            "Type": "Task",
            "Parameters": {
              "Bucket.$": "$.output[0].resizeSmall.Payload.data.bucket",
              "Key.$": "$.output[0].resizeSmall.Payload.data.uploadedKey"
            },
            "Resource": "arn:aws:states:::aws-sdk:s3:deleteObject",
            "End": true
          }
        }
      },
      "End": true
    }
  },
  "QueryLanguage": "JSONPath"
}